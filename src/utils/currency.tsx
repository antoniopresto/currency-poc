import Dinero, { Currency } from 'dinero.js';

import { keyBy, Merge } from 'powership';

export type { Currency };
export type CurrencyOption = { code: Currency; emoji: string; label: string };
export type CurrencySelection = Merge<CurrencyOption, { amount: string }>;

export type FormatCurrencyInput = {
  amount: string | number;
  currency: Currency;
};

export function formatCurrency(input: FormatCurrencyInput) {
  const precision = 2;
  const amount = +`${input.amount}`.replace(/[^\d.]/g, '');

  const amountInMinimalUnit = Math.round(amount * Math.pow(10, precision));

  return Dinero({
    amount: amountInMinimalUnit,
    currency: input.currency,
    precision: precision,
  }).toFormat();
}

const currencies = [
  // Fiat Currencies (ISO 4217)
  { code: 'USD', emoji: 'ðŸ‡ºðŸ‡¸', label: 'US Dollar' },
  { code: 'EUR', emoji: 'ðŸ‡ªðŸ‡º', label: 'Euro' },
  { code: 'JPY', emoji: 'ðŸ‡¯ðŸ‡µ', label: 'Japanese Yen' },
  { code: 'GBP', emoji: 'ðŸ‡¬ðŸ‡§', label: 'British Pound' },
  { code: 'CNY', emoji: 'ðŸ‡¨ðŸ‡³', label: 'Chinese Yuan' },
  { code: 'AUD', emoji: 'ðŸ‡¦ðŸ‡º', label: 'Australian Dollar' },
  { code: 'CAD', emoji: 'ðŸ‡¨ðŸ‡¦', label: 'Canadian Dollar' },
  { code: 'CHF', emoji: 'ðŸ‡¨ðŸ‡­', label: 'Swiss Franc' },
  { code: 'HKD', emoji: 'ðŸ‡­ðŸ‡°', label: 'Hong Kong Dollar' },
  { code: 'SGD', emoji: 'ðŸ‡¸ðŸ‡¬', label: 'Singapore Dollar' },
  { code: 'SEK', emoji: 'ðŸ‡¸ðŸ‡ª', label: 'Swedish Krona' },
  { code: 'NZD', emoji: 'ðŸ‡³ðŸ‡¿', label: 'New Zealand Dollar' },
  { code: 'KRW', emoji: 'ðŸ‡°ðŸ‡·', label: 'South Korean Won' },
  { code: 'INR', emoji: 'ðŸ‡®ðŸ‡³', label: 'Indian Rupee' },
  { code: 'BRL', emoji: 'ðŸ‡§ðŸ‡·', label: 'Brazilian Real' },
  { code: 'MXN', emoji: 'ðŸ‡²ðŸ‡½', label: 'Mexican Peso' },
  { code: 'RUB', emoji: 'ðŸ‡·ðŸ‡º', label: 'Russian Ruble' },
  { code: 'ZAR', emoji: 'ðŸ‡¿ðŸ‡¦', label: 'South African Rand' },
  { code: 'TRY', emoji: 'ðŸ‡¹ðŸ‡·', label: 'Turkish Lira' },
  { code: 'SAR', emoji: 'ðŸ‡¸ðŸ‡¦', label: 'Saudi Riyal' },
] satisfies CurrencyOption[];

const currencyByCode = keyBy(currencies, (el) => el.code) as Record<
  string,
  CurrencyOption
>;

const defaultValue: CurrencySelection = {
  ...currencies[0],
  amount: '',
};

const defaultValueAlt: CurrencySelection = {
  ...currencies[1],
  amount: '',
};

export const currencySelectorHelpers = {
  defaultValue,
  defaultValueAlt,
  currencyByCode,
  currencies,
};
